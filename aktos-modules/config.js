// Generated by LiveScript 1.4.0
var sleep, out$ = typeof exports != 'undefined' && exports || this;
sleep = require('aea').sleep;
out$.Config = Config;
function Config(fileNo){
  var self;
  self = this;
  this.fileNo = fileNo;
  Config.f = new (require("FlashEEPROM"))();
  Config.f.endAddr = Config.f.addr + 1024;
  this.writeCount = 0;
  this.periodicSync();
}
Config.prototype.flush = function(){
  console.log("flushing to eeprom...");
  this.write(this.ram);
};
Config.prototype.periodicSync = function(){
  var self;
  self = this;
  (function lo(op){
    return sleep(3600 * 1000, function(){
      self.flush();
      return lo(op);
    });
  })(function(){});
};
Config.prototype.write = function(data){
  if (this.writeCount++ > 10) {
    Config.f.cleanup();
    this.writeCount = 0;
  }
  Config.f.write(this.fileNo, pack(data));
  this.ram = data;
};
Config.prototype.read = function(){
  var data, e;
  try {
    data = E.toString(Config.f.read(this.fileNo));
    this.ram = unpack(data);
    return this.ram;
  } catch (e$) {
    e = e$;
    return console.log("ERROR CONFIG READ(" + this.fileNo + "): " + e + ", raw: " + data);
  }
};
