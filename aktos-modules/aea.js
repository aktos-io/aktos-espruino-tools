// Generated by LiveScript 1.4.0
var sleep, after, looop, pack, unpack, repl, out$ = typeof exports != 'undefined' && exports || this;
out$.sleep = sleep = function(ms, func){
  setTimeout(func, ms);
};
out$.after = after = sleep;
out$.looop = looop = function(ms, f){
  return setInterval(f, ms);
};
out$.pack = pack = function(x){
  return JSON.stringify(x);
};
out$.unpack = unpack = function(wireData){
  return JSON.parse(wireData);
};
out$.repl = repl = {
  detach: function(){
    console.log("Disabling REPL console!");
    LoopbackA.setConsole();
  },
  attach: function(){
    ser.setConsole();
    console.log("REPL console enabled!");
  }
};
out$.merge = merge;
function merge(obj1, obj2){
  var p;
  for (p in obj2) {
    if (typeof obj2[p] === 'object') {
      if (obj1[p]) {
        merge(obj1[p], obj2[p]);
      } else {
        obj1[p] = obj2[p];
      }
    } else {
      if (obj1[p] !== void 8) {
        obj1[p] = obj2[p];
      } else {
        delete obj1[p];
      }
    }
  }
  return obj1;
}
/*
a = {x: 1, y: 2}
b = {z: 3}

a `merge` b

console.log "a is: ", a
# expected a is:  { x: 1, y: 2, z: 3 }
*/
